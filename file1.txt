Git Commands

git init :- This command creates a new git Repository.
Note: Whatever file you create in the Folder it will be in the working directory stage

git add filename :- This command is used to add the file into the staging area.
Note: if we change some code after adding file to staging are then the changes will not
be updated so to update you have to add the file to staging area again.

git add :- this command adds all changes and newly created files to the staging area.

git status :- this command shows the stages of files. If files are in the working directory
then it will be in red , if files are in the staging area then it will be shown in green color.

git rm --cached <file> :- this command removes the file from staging area

git commit -m “comment” :- this command moves the code into the local repo stage.
If we commit at any stage then it will be like a checkpoint, so after this if we code and
make a mistake we can always come back to the same position of code when we had
created a checkpoint.
“-m” stands for message so here we can write some comments about commit.

git log :- this command gives the history of all commits and it also show code which is
unique for every commit and used when we want to go back to that commit
Git reset HEAD~1 :- this command uncommit the last commit
Git reset --hard <code> :- this command completely go back to the required commit

git push -u origin main :- this push the changes to the github or to remote repo. From
here this will be seen by everyone if the repo is made public.
Note: while pushing it will ask for username and password of github give it then go to
github and we can see the files pushed from our computer to the github

git branch :- this command list the branches and shows at what branch we are in at
present state
git checkout -b <branch-name>:- It creates new branch
git checkout <branch-name> :- it changes from one branch to required branch
git push -u <branch-name> :- it pushes only branch to the github. After this command
we can go to the github and compare and if there is no conflict we can merge the
branch to the main branch.
git merge <branch-name> :- we can merge branches using commands also . we have
to be in the branch to which the other branch is merging and then use this command to
merge branches.
Note: When we work in a team all team members will contribute and we have to be
updated with our local directory or in other words we have to download the changes
made by others and according to that we have to continue with our work .

git pull :- this command will update with the changes made in github to our local
directory .

git clone <link> :- this command is used to download project to our pc

Git Ignore files:-
If we want some files to not to be uploaded to the github then we can ignore those files
We create a directory named .gitignore
Add all the files which should be ignored in this folder